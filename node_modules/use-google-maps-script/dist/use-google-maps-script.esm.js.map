{"version":3,"file":"use-google-maps-script.esm.js","sources":["../src/utils/isBrowser.ts","../src/utils/isbrowser.ts","../src/utils/injectScript.ts","../src/utils/createUrl.ts","../src/index.ts"],"sourcesContent":["export const isBrowser: boolean = typeof document !== 'undefined';\n","export const isBrowser: boolean = typeof document !== 'undefined';\n","import { isBrowser } from './isbrowser';\n\ninterface WindowWithGoogleMap extends Window {\n  initMap?: () => void;\n}\n\ninterface InjectScriptArg {\n  url: string;\n  id: string;\n  nonce?: string;\n}\n\nexport const injectScript = ({\n  url,\n  id,\n  nonce,\n}: InjectScriptArg): Promise<any> => {\n  if (!isBrowser) {\n    return Promise.reject(new Error('document is undefined'));\n  }\n\n  return new Promise(function injectScriptCallback(resolve, reject) {\n    const existingScript = document.getElementById(id) as\n      | HTMLScriptElement\n      | undefined;\n    const windowWithGoogleMap: WindowWithGoogleMap = window;\n    if (existingScript) {\n      // Same script id/url: keep same script\n      const dataStateAttribute = existingScript.getAttribute('data-state');\n      if (existingScript.src === url && dataStateAttribute !== 'error') {\n        if (dataStateAttribute === 'ready') {\n          return resolve(id);\n        } else {\n          const originalInitMap = windowWithGoogleMap.initMap;\n          const originalErrorCallback = existingScript.onerror;\n\n          windowWithGoogleMap.initMap = function initMap(): void {\n            if (originalInitMap) {\n              originalInitMap();\n            }\n            resolve(id);\n          };\n\n          existingScript.onerror = function(err): void {\n            if (originalErrorCallback) {\n              originalErrorCallback(err);\n            }\n            reject(err);\n          };\n\n          return;\n        }\n      }\n      // Same script id, but either\n      // 1. requested URL is different\n      // 2. script failed to load\n      else {\n        existingScript.remove();\n      }\n    }\n\n    const script = document.createElement('script');\n\n    script.type = 'text/javascript';\n    script.src = url;\n    script.id = id;\n    script.async = true;\n    script.nonce = nonce;\n    script.onerror = function onerror(err): void {\n      script.setAttribute('data-state', 'error');\n      reject(err);\n    };\n\n    windowWithGoogleMap.initMap = function onload(): void {\n      script.setAttribute('data-state', 'ready');\n      resolve(id);\n    };\n\n    document.head.appendChild(script);\n  }).catch(err => {\n    console.error('injectScript error: ', err);\n    throw err;\n  });\n};\n","import invariant from 'invariant';\n\nexport type Libraries = (\n  | 'drawing'\n  | 'geometry'\n  | 'localContext'\n  | 'places'\n  | 'visualization'\n)[];\n\nexport interface LoadScriptUrlOptions {\n  googleMapsApiKey: string | '';\n  googleMapsClientId?: string;\n  version?: string;\n  language?: string;\n  region?: string;\n  libraries?: Libraries;\n  channel?: string;\n  mapIds?: string[];\n}\n\nexport function makeLoadScriptUrl({\n  googleMapsApiKey,\n  googleMapsClientId,\n  version = 'weekly',\n  language,\n  region,\n  libraries,\n  channel,\n  mapIds,\n}: LoadScriptUrlOptions): string {\n  const params = [];\n\n  invariant(\n    (googleMapsApiKey && googleMapsClientId) ||\n      !(googleMapsApiKey && googleMapsClientId),\n    'You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time.'\n  );\n\n  if (googleMapsApiKey) {\n    params.push(`key=${googleMapsApiKey}`);\n  } else if (googleMapsClientId) {\n    params.push(`client=${googleMapsClientId}`);\n  }\n\n  if (version) {\n    params.push(`v=${version}`);\n  }\n\n  if (language) {\n    params.push(`language=${language}`);\n  }\n\n  if (region) {\n    params.push(`region=${region}`);\n  }\n\n  if (libraries && libraries.length) {\n    params.push(`libraries=${libraries.sort().join(',')}`);\n  }\n\n  if (channel) {\n    params.push(`channel=${channel}`);\n  }\n\n  if (mapIds && mapIds.length) {\n    params.push(`map_ids=${mapIds.join(',')}`);\n  }\n\n  params.push('callback=initMap');\n\n  return `https://maps.googleapis.com/maps/api/js?${params.join('&')}`;\n}\n","import { useRef, useEffect, useState } from 'react';\nimport invariant from 'invariant';\n\nimport { isBrowser } from './utils/isBrowser';\nimport { injectScript } from './utils/injectScript';\nimport { makeLoadScriptUrl, LoadScriptUrlOptions } from './utils/createUrl';\n\nexport { Libraries } from './utils/createUrl';\n\nexport interface UseLoadScriptOptions extends LoadScriptUrlOptions {\n  id?: string;\n  nonce?: string;\n}\n\nconst defaultLoadScriptProps = {\n  id: 'script-loader',\n  version: 'weekly',\n};\n\nlet previouslyLoadedUrl: string;\n\nexport function useGoogleMapsScript({\n  id = defaultLoadScriptProps.id,\n  version = defaultLoadScriptProps.version,\n  nonce,\n  googleMapsApiKey,\n  googleMapsClientId,\n  language,\n  region,\n  libraries,\n  channel,\n  mapIds,\n}: UseLoadScriptOptions): {\n  isLoaded: boolean;\n  loadError: Error | undefined;\n  url: string;\n} {\n  const isMounted = useRef(false);\n  const [isLoaded, setLoaded] = useState(false);\n  const [loadError, setLoadError] = useState<Error | undefined>(undefined);\n\n  useEffect(function trackMountedState() {\n    isMounted.current = true;\n    return (): void => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(\n    function validateLoadedState() {\n      if (isLoaded) {\n        invariant(\n          !!window.google,\n          'useLoadScript was marked as loaded, but window.google is not present. Something went wrong.'\n        );\n      }\n    },\n    [isLoaded]\n  );\n\n  const url = makeLoadScriptUrl({\n    version,\n    googleMapsApiKey,\n    googleMapsClientId,\n    language,\n    region,\n    libraries,\n    channel,\n    mapIds,\n  });\n\n  useEffect(\n    function loadScriptAndModifyLoadedState() {\n      if (!isBrowser) {\n        return;\n      }\n\n      function setLoadedIfMounted(): void {\n        if (isMounted.current) {\n          setLoaded(true);\n          previouslyLoadedUrl = url;\n        }\n      }\n\n      if (window.google && window.google.maps && previouslyLoadedUrl === url) {\n        setLoadedIfMounted();\n        return;\n      }\n\n      injectScript({ id, url, nonce })\n        .then(setLoadedIfMounted)\n        .catch(function handleInjectError(err) {\n          if (isMounted.current) {\n            setLoadError(err);\n          }\n          console.warn(`\n        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${googleMapsApiKey ||\n          '-'}) or Client ID (${googleMapsClientId || '-'})\n        Otherwise it is a Network issue.\n      `);\n          console.error(err);\n        });\n    },\n    [id, url, nonce]\n  );\n\n  const prevLibraries = useRef<undefined | string[]>();\n\n  useEffect(\n    function checkPerformance() {\n      if (prevLibraries.current && libraries !== prevLibraries.current) {\n        console.warn(\n          'Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables'\n        );\n      }\n      prevLibraries.current = libraries;\n    },\n    [libraries]\n  );\n\n  return { isLoaded, loadError, url };\n}\n"],"names":["isBrowser","document","injectScript","url","id","nonce","Promise","reject","Error","injectScriptCallback","resolve","existingScript","getElementById","windowWithGoogleMap","window","dataStateAttribute","getAttribute","src","originalInitMap","initMap","originalErrorCallback","onerror","err","remove","script","createElement","type","async","setAttribute","onload","head","appendChild","console","error","makeLoadScriptUrl","googleMapsApiKey","googleMapsClientId","version","language","region","libraries","channel","mapIds","params","invariant","push","length","sort","join","defaultLoadScriptProps","previouslyLoadedUrl","useGoogleMapsScript","isMounted","useRef","useState","isLoaded","setLoaded","undefined","loadError","setLoadError","useEffect","trackMountedState","current","validateLoadedState","google","loadScriptAndModifyLoadedState","setLoadedIfMounted","maps","then","handleInjectError","warn","prevLibraries","checkPerformance"],"mappings":";;;AAAO,IAAMA,SAAS,GAAY,OAAOC,QAAP,KAAoB,WAA/C;;ACAA,IAAMD,WAAS,GAAY,OAAOC,QAAP,KAAoB,WAA/C;;ACYA,IAAMC,YAAY,GAAG,SAAfA,YAAe;MAC1BC,WAAAA;MACAC,UAAAA;MACAC,aAAAA;;AAEA,MAAI,CAACL,WAAL,EAAgB;AACd,WAAOM,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,uBAAV,CAAf,CAAP;AACD;;AAED,SAAO,IAAIF,OAAJ,CAAY,SAASG,oBAAT,CAA8BC,OAA9B,EAAuCH,MAAvC;AACjB,QAAMI,cAAc,GAAGV,QAAQ,CAACW,cAAT,CAAwBR,EAAxB,CAAvB;AAGA,QAAMS,mBAAmB,GAAwBC,MAAjD;;AACA,QAAIH,cAAJ,EAAoB;AAClB;AACA,UAAMI,kBAAkB,GAAGJ,cAAc,CAACK,YAAf,CAA4B,YAA5B,CAA3B;;AACA,UAAIL,cAAc,CAACM,GAAf,KAAuBd,GAAvB,IAA8BY,kBAAkB,KAAK,OAAzD,EAAkE;AAChE,YAAIA,kBAAkB,KAAK,OAA3B,EAAoC;AAClC,iBAAOL,OAAO,CAACN,EAAD,CAAd;AACD,SAFD,MAEO;AACL,cAAMc,eAAe,GAAGL,mBAAmB,CAACM,OAA5C;AACA,cAAMC,qBAAqB,GAAGT,cAAc,CAACU,OAA7C;;AAEAR,UAAAA,mBAAmB,CAACM,OAApB,GAA8B,SAASA,OAAT;AAC5B,gBAAID,eAAJ,EAAqB;AACnBA,cAAAA,eAAe;AAChB;;AACDR,YAAAA,OAAO,CAACN,EAAD,CAAP;AACD,WALD;;AAOAO,UAAAA,cAAc,CAACU,OAAf,GAAyB,UAASC,GAAT;AACvB,gBAAIF,qBAAJ,EAA2B;AACzBA,cAAAA,qBAAqB,CAACE,GAAD,CAArB;AACD;;AACDf,YAAAA,MAAM,CAACe,GAAD,CAAN;AACD,WALD;;AAOA;AACD;AACF,OAvBD;AAyBA;AACA;AA1BA,WA2BK;AACHX,UAAAA,cAAc,CAACY,MAAf;AACD;AACF;;AAED,QAAMC,MAAM,GAAGvB,QAAQ,CAACwB,aAAT,CAAuB,QAAvB,CAAf;AAEAD,IAAAA,MAAM,CAACE,IAAP,GAAc,iBAAd;AACAF,IAAAA,MAAM,CAACP,GAAP,GAAad,GAAb;AACAqB,IAAAA,MAAM,CAACpB,EAAP,GAAYA,EAAZ;AACAoB,IAAAA,MAAM,CAACG,KAAP,GAAe,IAAf;AACAH,IAAAA,MAAM,CAACnB,KAAP,GAAeA,KAAf;;AACAmB,IAAAA,MAAM,CAACH,OAAP,GAAiB,SAASA,OAAT,CAAiBC,GAAjB;AACfE,MAAAA,MAAM,CAACI,YAAP,CAAoB,YAApB,EAAkC,OAAlC;AACArB,MAAAA,MAAM,CAACe,GAAD,CAAN;AACD,KAHD;;AAKAT,IAAAA,mBAAmB,CAACM,OAApB,GAA8B,SAASU,MAAT;AAC5BL,MAAAA,MAAM,CAACI,YAAP,CAAoB,YAApB,EAAkC,OAAlC;AACAlB,MAAAA,OAAO,CAACN,EAAD,CAAP;AACD,KAHD;;AAKAH,IAAAA,QAAQ,CAAC6B,IAAT,CAAcC,WAAd,CAA0BP,MAA1B;AACD,GA1DM,WA0DE,UAAAF,GAAG;AACVU,IAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCX,GAAtC;AACA,UAAMA,GAAN;AACD,GA7DM,CAAP;AA8DD,CAvEM;;SCSSY;MACdC,wBAAAA;MACAC,0BAAAA;0BACAC;MAAAA,oCAAU;MACVC,gBAAAA;MACAC,cAAAA;MACAC,iBAAAA;MACAC,eAAAA;MACAC,cAAAA;AAEA,MAAMC,MAAM,GAAG,EAAf;AAEA,IACGR,gBAAgB,IAAIC,kBAArB,IACE,EAAED,gBAAgB,IAAIC,kBAAtB,CAFJ,4CAAAQ,SAAS,QAGP,yJAHO,CAAT,GAAAA,SAAS,OAAT;;AAMA,MAAIT,gBAAJ,EAAsB;AACpBQ,IAAAA,MAAM,CAACE,IAAP,UAAmBV,gBAAnB;AACD,GAFD,MAEO,IAAIC,kBAAJ,EAAwB;AAC7BO,IAAAA,MAAM,CAACE,IAAP,aAAsBT,kBAAtB;AACD;;AAED,MAAIC,OAAJ,EAAa;AACXM,IAAAA,MAAM,CAACE,IAAP,QAAiBR,OAAjB;AACD;;AAED,MAAIC,QAAJ,EAAc;AACZK,IAAAA,MAAM,CAACE,IAAP,eAAwBP,QAAxB;AACD;;AAED,MAAIC,MAAJ,EAAY;AACVI,IAAAA,MAAM,CAACE,IAAP,aAAsBN,MAAtB;AACD;;AAED,MAAIC,SAAS,IAAIA,SAAS,CAACM,MAA3B,EAAmC;AACjCH,IAAAA,MAAM,CAACE,IAAP,gBAAyBL,SAAS,CAACO,IAAV,GAAiBC,IAAjB,CAAsB,GAAtB,CAAzB;AACD;;AAED,MAAIP,OAAJ,EAAa;AACXE,IAAAA,MAAM,CAACE,IAAP,cAAuBJ,OAAvB;AACD;;AAED,MAAIC,MAAM,IAAIA,MAAM,CAACI,MAArB,EAA6B;AAC3BH,IAAAA,MAAM,CAACE,IAAP,cAAuBH,MAAM,CAACM,IAAP,CAAY,GAAZ,CAAvB;AACD;;AAEDL,EAAAA,MAAM,CAACE,IAAP,CAAY,kBAAZ;AAEA,sDAAkDF,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAlD;AACD;;AC1DD,IAAMC,sBAAsB,GAAG;AAC7B7C,EAAAA,EAAE,EAAE,eADyB;AAE7BiC,EAAAA,OAAO,EAAE;AAFoB,CAA/B;AAKA,IAAIa,mBAAJ;AAEA,SAAgBC;qBACd/C;MAAAA,0BAAK6C,sBAAsB,CAAC7C;0BAC5BiC;MAAAA,oCAAUY,sBAAsB,CAACZ;MACjChC,aAAAA;MACA8B,wBAAAA;MACAC,0BAAAA;MACAE,gBAAAA;MACAC,cAAAA;MACAC,iBAAAA;MACAC,eAAAA;MACAC,cAAAA;AAMA,MAAMU,SAAS,GAAGC,MAAM,CAAC,KAAD,CAAxB;;kBAC8BC,QAAQ,CAAC,KAAD;MAA/BC;MAAUC;;mBACiBF,QAAQ,CAAoBG,SAApB;MAAnCC;MAAWC;;AAElBC,EAAAA,SAAS,CAAC,SAASC,iBAAT;AACRT,IAAAA,SAAS,CAACU,OAAV,GAAoB,IAApB;AACA,WAAO;AACLV,MAAAA,SAAS,CAACU,OAAV,GAAoB,KAApB;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOAF,EAAAA,SAAS,CACP,SAASG,mBAAT;AACE,QAAIR,QAAJ,EAAc;AACZ,OACE,CAAC,CAACzC,MAAM,CAACkD,MADX,2CAAApB,SAAS,QAEP,6FAFO,CAAT,GAAAA,SAAS,OAAT;AAID;AACF,GARM,EASP,CAACW,QAAD,CATO,CAAT;AAYA,MAAMpD,GAAG,GAAG+B,iBAAiB,CAAC;AAC5BG,IAAAA,OAAO,EAAPA,OAD4B;AAE5BF,IAAAA,gBAAgB,EAAhBA,gBAF4B;AAG5BC,IAAAA,kBAAkB,EAAlBA,kBAH4B;AAI5BE,IAAAA,QAAQ,EAARA,QAJ4B;AAK5BC,IAAAA,MAAM,EAANA,MAL4B;AAM5BC,IAAAA,SAAS,EAATA,SAN4B;AAO5BC,IAAAA,OAAO,EAAPA,OAP4B;AAQ5BC,IAAAA,MAAM,EAANA;AAR4B,GAAD,CAA7B;AAWAkB,EAAAA,SAAS,CACP,SAASK,8BAAT;AACE,QAAI,CAACjE,SAAL,EAAgB;AACd;AACD;;AAED,aAASkE,kBAAT;AACE,UAAId,SAAS,CAACU,OAAd,EAAuB;AACrBN,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAN,QAAAA,mBAAmB,GAAG/C,GAAtB;AACD;AACF;;AAED,QAAIW,MAAM,CAACkD,MAAP,IAAiBlD,MAAM,CAACkD,MAAP,CAAcG,IAA/B,IAAuCjB,mBAAmB,KAAK/C,GAAnE,EAAwE;AACtE+D,MAAAA,kBAAkB;AAClB;AACD;;AAEDhE,IAAAA,YAAY,CAAC;AAAEE,MAAAA,EAAE,EAAFA,EAAF;AAAMD,MAAAA,GAAG,EAAHA,GAAN;AAAWE,MAAAA,KAAK,EAALA;AAAX,KAAD,CAAZ,CACG+D,IADH,CACQF,kBADR,WAES,SAASG,iBAAT,CAA2B/C,GAA3B;AACL,UAAI8B,SAAS,CAACU,OAAd,EAAuB;AACrBH,QAAAA,YAAY,CAACrC,GAAD,CAAZ;AACD;;AACDU,MAAAA,OAAO,CAACsC,IAAR,qIACoHnC,gBAAgB,IACpI,GAFA,0BAEsBC,kBAAkB,IAAI,GAF5C;AAKAJ,MAAAA,OAAO,CAACC,KAAR,CAAcX,GAAd;AACD,KAZH;AAaD,GA/BM,EAgCP,CAAClB,EAAD,EAAKD,GAAL,EAAUE,KAAV,CAhCO,CAAT;AAmCA,MAAMkE,aAAa,GAAGlB,MAAM,EAA5B;AAEAO,EAAAA,SAAS,CACP,SAASY,gBAAT;AACE,QAAID,aAAa,CAACT,OAAd,IAAyBtB,SAAS,KAAK+B,aAAa,CAACT,OAAzD,EAAkE;AAChE9B,MAAAA,OAAO,CAACsC,IAAR,CACE,kTADF;AAGD;;AACDC,IAAAA,aAAa,CAACT,OAAd,GAAwBtB,SAAxB;AACD,GARM,EASP,CAACA,SAAD,CATO,CAAT;AAYA,SAAO;AAAEe,IAAAA,QAAQ,EAARA,QAAF;AAAYG,IAAAA,SAAS,EAATA,SAAZ;AAAuBvD,IAAAA,GAAG,EAAHA;AAAvB,GAAP;AACD;;;;"}