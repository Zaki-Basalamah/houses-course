{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Windows\\\\Desktop\\\\housestreetcourse\\\\house-course\\\\src\\\\components\\\\map.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef, useState } from \"react\";\nimport Link from \"next/link\";\nimport { Image } from \"cloudinary-react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { useLocalState } from \"src/utils/useLocalState\";\nimport { SearchBox } from \"./searchBox\";\nexport default function Map(_ref) {\n  _s();\n\n  var _this = this;\n\n  var setDataBounds = _ref.setDataBounds,\n      houses = _ref.houses,\n      highlightedId = _ref.highlightedId;\n\n  var _useState = useState(null),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var mapRef = useRef(null);\n\n  var _useLocalState = useLocalState(\"viewport\", {\n    latitude: 43,\n    longitude: -79,\n    zoom: 10\n  }),\n      _useLocalState2 = _slicedToArray(_useLocalState, 2),\n      viewport = _useLocalState2[0],\n      setViewport = _useLocalState2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-black relative\",\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, _objectSpread(_objectSpread({}, viewport), {}, {\n      width: \"100%\",\n      height: \"calc(100vh - 64px)\",\n      mapboxApiAccessToken: process.env.NEXT_PUBLIC_MAPBOX_API_TOKEN,\n      onViewportChange: function onViewportChange(nextViewport) {\n        return setViewport(nextViewport);\n      },\n      ref: function ref(instance) {\n        return mapRef.current = instance;\n      },\n      minZoom: 5,\n      maxZoom: 15,\n      mapStyle: \"mapbox://styles/leighhalliday/ckhjaksxg0x2v19s1ovps41ef\",\n      onLoad: function onLoad() {\n        if (mapRef.current) {\n          var _bounds = mapRef.current.getMap().getBounds();\n\n          setDataBounds(JSON.stringify(_bounds.toArray()));\n        }\n      },\n      onInteractionStateChange: function onInteractionStateChange(extra) {\n        if (!extra.isDragging && mapRef.current) {\n          var _bounds2 = mapRef.current.getMap().getBounds();\n\n          setDataBounds(JSON.stringify(_bounds2.toArray()));\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 w-full z-10 p-4\",\n        children: /*#__PURE__*/_jsxDEV(SearchBox, {\n          defaultValue: \"\",\n          onSelectAddress: function onSelectAddress(_address, latitude, longitude) {\n            if (latitude && longitude) {\n              setViewport(function (old) {\n                return _objectSpread(_objectSpread({}, old), {}, {\n                  latitude: latitude,\n                  longitude: longitude,\n                  zoom: 12\n                });\n              });\n\n              if (mapRef.current) {\n                var _bounds3 = mapRef.current.getMap().getBounds();\n\n                setDataBounds(JSON.stringify(_bounds3.toArray()));\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), houses.map(function (house) {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          latitude: house.latitude,\n          longitude: house.longitude,\n          offsetLeft: -15,\n          offsetTop: -15,\n          className: highlightedId === house.id ? \"marker-active\" : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              width: \"30px\",\n              height: \"30px\",\n              fontSize: \"30px\"\n            },\n            type: \"button\",\n            onClick: function onClick() {\n              return setSelected(house);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: highlightedId === house.id ? \"/home-color.svg\" : \"/home-solid.svg\",\n              alt: \"house\",\n              className: \"w-8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, _this)\n        }, house.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, _this);\n      }), selected && /*#__PURE__*/_jsxDEV(Popup, {\n        latitude: selected.latitude,\n        longitude: selected.longitude,\n        onClose: function onClose() {\n          return setSelected(null);\n        },\n        closeOnClick: false,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"px-4\",\n            children: selected.address.substr(0, 30)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            className: \"mx-auto my-4\",\n            cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\n            publicId: selected.publicId,\n            secure: true,\n            dpr: \"auto\",\n            quality: \"auto\",\n            width: 200,\n            height: Math.floor(9 / 16 * 200),\n            crop: \"fill\",\n            gravity: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/houses/\".concat(selected.id),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"View House\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"D+IPptGBC/w85J8HnsfXybdDJxE=\", false, function () {\n  return [useLocalState];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Windows/Desktop/housestreetcourse/house-course/src/components/map.tsx"],"names":["useRef","useState","Link","Image","ReactMapGL","Marker","Popup","useLocalState","SearchBox","Map","setDataBounds","houses","highlightedId","selected","setSelected","mapRef","latitude","longitude","zoom","viewport","setViewport","process","env","NEXT_PUBLIC_MAPBOX_API_TOKEN","nextViewport","instance","current","bounds","getMap","getBounds","JSON","stringify","toArray","extra","isDragging","_address","old","map","house","id","width","height","fontSize","address","substr","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME","publicId","Math","floor"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport ReactMapGL, { Marker, Popup, ViewState } from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport { useLocalState } from \"src/utils/useLocalState\";\r\nimport { HousesQuery_houses } from \"src/generated/HousesQuery\";\r\nimport { SearchBox } from \"./searchBox\";\r\n\r\ninterface IProps {\r\n  setDataBounds: (bounds: string) => void;\r\n  houses: HousesQuery_houses[];\r\n  highlightedId: string | null;\r\n}\r\n\r\nexport default function Map({ setDataBounds, houses, highlightedId }: IProps) {\r\n  const [selected, setSelected] = useState<HousesQuery_houses | null>(null);\r\n  const mapRef = useRef<ReactMapGL | null>(null);\r\n  const [viewport, setViewport] = useLocalState<ViewState>(\"viewport\", {\r\n    latitude: 43,\r\n    longitude: -79,\r\n    zoom: 10,\r\n  });\r\n\r\n  return (\r\n    <div className=\"text-black relative\">\r\n      <ReactMapGL\r\n        {...viewport}\r\n        width=\"100%\"\r\n        height=\"calc(100vh - 64px)\"\r\n        mapboxApiAccessToken={process.env.NEXT_PUBLIC_MAPBOX_API_TOKEN}\r\n        onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n        ref={(instance) => (mapRef.current = instance)}\r\n        minZoom={5}\r\n        maxZoom={15}\r\n        mapStyle=\"mapbox://styles/leighhalliday/ckhjaksxg0x2v19s1ovps41ef\"\r\n        onLoad={() => {\r\n          if (mapRef.current) {\r\n            const bounds = mapRef.current.getMap().getBounds();\r\n            setDataBounds(JSON.stringify(bounds.toArray()));\r\n          }\r\n        }}\r\n        onInteractionStateChange={(extra) => {\r\n          if (!extra.isDragging && mapRef.current) {\r\n            const bounds = mapRef.current.getMap().getBounds();\r\n            setDataBounds(JSON.stringify(bounds.toArray()));\r\n          }\r\n        }}\r\n      >\r\n        <div className=\"absolute top-0 w-full z-10 p-4\">\r\n          <SearchBox\r\n            defaultValue=\"\"\r\n            onSelectAddress={(_address, latitude, longitude) => {\r\n              if (latitude && longitude) {\r\n                setViewport((old) => ({\r\n                  ...old,\r\n                  latitude,\r\n                  longitude,\r\n                  zoom: 12,\r\n                }));\r\n                if (mapRef.current) {\r\n                  const bounds = mapRef.current.getMap().getBounds();\r\n                  setDataBounds(JSON.stringify(bounds.toArray()));\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {houses.map((house) => (\r\n          <Marker\r\n            key={house.id}\r\n            latitude={house.latitude}\r\n            longitude={house.longitude}\r\n            offsetLeft={-15}\r\n            offsetTop={-15}\r\n            className={highlightedId === house.id ? \"marker-active\" : \"\"}\r\n          >\r\n            <button\r\n              style={{ width: \"30px\", height: \"30px\", fontSize: \"30px\" }}\r\n              type=\"button\"\r\n              onClick={() => setSelected(house)}\r\n            >\r\n              <img\r\n                src={\r\n                  highlightedId === house.id\r\n                    ? \"/home-color.svg\"\r\n                    : \"/home-solid.svg\"\r\n                }\r\n                alt=\"house\"\r\n                className=\"w-8\"\r\n              />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {selected && (\r\n          <Popup\r\n            latitude={selected.latitude}\r\n            longitude={selected.longitude}\r\n            onClose={() => setSelected(null)}\r\n            closeOnClick={false}\r\n          >\r\n            <div className=\"text-center\">\r\n              <h3 className=\"px-4\">{selected.address.substr(0, 30)}</h3>\r\n              <Image\r\n                className=\"mx-auto my-4\"\r\n                cloudName={process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME}\r\n                publicId={selected.publicId}\r\n                secure\r\n                dpr=\"auto\"\r\n                quality=\"auto\"\r\n                width={200}\r\n                height={Math.floor((9 / 16) * 200)}\r\n                crop=\"fill\"\r\n                gravity=\"auto\"\r\n              />\r\n              <Link href={`/houses/${selected.id}`}>\r\n                <a>View House</a>\r\n              </Link>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}