{"ast":null,"code":"import * as admin from \"firebase-admin\";\n\nconst verifyIdToken = token => {\n  var _process$env$FIREBASE;\n\n  const firebasePrivateKey = (_process$env$FIREBASE = process.env.FIREBASE_PRIVATE_KEY) !== null && _process$env$FIREBASE !== void 0 ? _process$env$FIREBASE : \"\";\n\n  if (!admin.apps.length) {\n    admin.initializeApp({\n      credential: admin.credential.cert({\n        projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n        privateKey: firebasePrivateKey.replace(/\\\\n/gm, \"\\n\")\n      })\n    });\n  }\n\n  return admin.auth().verifyIdToken(token).catch(() => null);\n};\n\nexport const loadIdToken = async (req) => {\n  if (!req.cookies.token) return null;\n  const decoded = await verifyIdToken(req.cookies.token);\n  if (!decoded) return null;\n  return decoded.uid;\n};","map":{"version":3,"sources":["C:/Users/Windows/Desktop/housestreetcourse/house-course/src/auth/firebaseAdmin.ts"],"names":["admin","verifyIdToken","token","firebasePrivateKey","process","env","FIREBASE_PRIVATE_KEY","apps","length","initializeApp","credential","cert","projectId","NEXT_PUBLIC_FIREBASE_PROJECT_ID","clientEmail","FIREBASE_CLIENT_EMAIL","privateKey","replace","auth","catch","loadIdToken","req","cookies","decoded","uid"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gBAAvB;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAmB;AAAA;;AACvC,QAAMC,kBAA0B,4BAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAf,yEAAuC,EAAvE;;AAEA,MAAI,CAACN,KAAK,CAACO,IAAN,CAAWC,MAAhB,EAAwB;AACtBR,IAAAA,KAAK,CAACS,aAAN,CAAoB;AAClBC,MAAAA,UAAU,EAAEV,KAAK,CAACU,UAAN,CAAiBC,IAAjB,CAAsB;AAChCC,QAAAA,SAAS,EAAER,OAAO,CAACC,GAAR,CAAYQ,+BADS;AAEhCC,QAAAA,WAAW,EAAEV,OAAO,CAACC,GAAR,CAAYU,qBAFO;AAGhCC,QAAAA,UAAU,EAAEb,kBAAkB,CAACc,OAAnB,CAA2B,OAA3B,EAAoC,IAApC;AAHoB,OAAtB;AADM,KAApB;AAOD;;AAED,SAAOjB,KAAK,CACTkB,IADI,GAEJjB,aAFI,CAEUC,KAFV,EAGJiB,KAHI,CAGE,MAAM,IAHR,CAAP;AAID,CAjBD;;AAmBA,OAAO,MAAMC,WAAW,GAAG,OACzBC,GADyB,KAEE;AAC3B,MAAI,CAACA,GAAG,CAACC,OAAJ,CAAYpB,KAAjB,EAAwB,OAAO,IAAP;AACxB,QAAMqB,OAAO,GAAG,MAAMtB,aAAa,CAACoB,GAAG,CAACC,OAAJ,CAAYpB,KAAb,CAAnC;AACA,MAAI,CAACqB,OAAL,EAAc,OAAO,IAAP;AACd,SAAOA,OAAO,CAACC,GAAf;AACD,CAPM","sourcesContent":["import * as admin from \"firebase-admin\";\r\nimport { NextApiRequest } from \"next\";\r\n\r\nconst verifyIdToken = (token: string) => {\r\n  const firebasePrivateKey: string = process.env.FIREBASE_PRIVATE_KEY ?? \"\";\r\n\r\n  if (!admin.apps.length) {\r\n    admin.initializeApp({\r\n      credential: admin.credential.cert({\r\n        projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n        privateKey: firebasePrivateKey.replace(/\\\\n/gm, \"\\n\"),\r\n      }),\r\n    });\r\n  }\r\n\r\n  return admin\r\n    .auth()\r\n    .verifyIdToken(token)\r\n    .catch(() => null);\r\n};\r\n\r\nexport const loadIdToken = async (\r\n  req: NextApiRequest\r\n): Promise<string | null> => {\r\n  if (!req.cookies.token) return null;\r\n  const decoded = await verifyIdToken(req.cookies.token);\r\n  if (!decoded) return null;\r\n  return decoded.uid;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}