{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Windows\\\\Desktop\\\\housestreetcourse\\\\house-course\\\\src\\\\components\\\\houseForm.tsx\",\n    _s = $RefreshSig$();\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UpdateHouseMutation($id: String!, $input: HouseInput!) {\\n    updateHouse(id: $id, input: $input) {\\n      id\\n      image\\n      publicId\\n      latitude\\n      longitude\\n      bedrooms\\n      address\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CreateHouseMutation($input: HouseInput!) {\\n    createHouse(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CreateSignatureMutation {\\n    createImageSignature {\\n      signature\\n      timestamp\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { Image } from \"cloudinary-react\";\nimport { SearchBox } from \"./searchBox\";\nvar SIGNATURE_MUTATION = gql(_templateObject());\nvar CREATE_HOUSE_MUTATION = gql(_templateObject2());\nvar UPDATE_HOUSE_MUTATION = gql(_templateObject3());\n\nfunction uploadImage(_x, _x2, _x3) {\n  return _uploadImage.apply(this, arguments);\n}\n\nfunction _uploadImage() {\n  _uploadImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(image, signature, timestamp) {\n    var _process$env$NEXT_PUB;\n\n    var url, formData, response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            url = \"https://api.cloudinary.com/v1_1/\".concat(process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME, \"/upload\");\n            formData = new FormData();\n            formData.append(\"file\", image);\n            formData.append(\"signature\", signature);\n            formData.append(\"timestamp\", timestamp.toString());\n            formData.append(\"api_key\", (_process$env$NEXT_PUB = process.env.NEXT_PUBLIC_CLOUDINARY_KEY) !== null && _process$env$NEXT_PUB !== void 0 ? _process$env$NEXT_PUB : \"\");\n            _context3.next = 8;\n            return fetch(url, {\n              method: \"post\",\n              body: formData\n            });\n\n          case 8:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.json());\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _uploadImage.apply(this, arguments);\n}\n\nexport default function HouseForm(_ref) {\n  _s();\n\n  var house = _ref.house;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      submitting = _useState[0],\n      setSubmitting = _useState[1];\n\n  var _useState2 = useState(),\n      previewImage = _useState2[0],\n      setPreviewImage = _useState2[1];\n\n  var _useForm = useForm({\n    defaultValues: house ? {\n      address: house.address,\n      latitude: house.latitude,\n      longitude: house.longitude,\n      bedrooms: house.bedrooms.toString()\n    } : {}\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      setValue = _useForm.setValue,\n      errors = _useForm.errors,\n      watch = _useForm.watch;\n\n  var address = watch(\"address\");\n\n  var _useMutation = useMutation(SIGNATURE_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createSignature = _useMutation2[0];\n\n  var _useMutation3 = useMutation(CREATE_HOUSE_MUTATION),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      createHouse = _useMutation4[0];\n\n  var _useMutation5 = useMutation(UPDATE_HOUSE_MUTATION),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      updateHouse = _useMutation6[0];\n\n  useEffect(function () {\n    register({\n      name: \"address\"\n    }, {\n      required: \"Please enter your address\"\n    });\n    register({\n      name: \"latitude\"\n    }, {\n      required: true,\n      min: -90,\n      max: 90\n    });\n    register({\n      name: \"longitude\"\n    }, {\n      required: true,\n      min: -180,\n      max: 180\n    });\n  }, [register]);\n\n  var handleCreate = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var _yield$createSignatur, signatureData, _signatureData$create, signature, timestamp, imageData, _yield$createHouse, houseData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return createSignature();\n\n            case 2:\n              _yield$createSignatur = _context.sent;\n              signatureData = _yield$createSignatur.data;\n\n              if (!signatureData) {\n                _context.next = 14;\n                break;\n              }\n\n              _signatureData$create = signatureData.createImageSignature, signature = _signatureData$create.signature, timestamp = _signatureData$create.timestamp;\n              _context.next = 8;\n              return uploadImage(data.image[0], signature, timestamp);\n\n            case 8:\n              imageData = _context.sent;\n              _context.next = 11;\n              return createHouse({\n                variables: {\n                  input: {\n                    address: data.address,\n                    image: imageData.secure_url,\n                    coordinates: {\n                      latitude: data.latitude,\n                      longitude: data.longitude\n                    },\n                    bedrooms: parseInt(data.bedrooms, 10)\n                  }\n                }\n              });\n\n            case 11:\n              _yield$createHouse = _context.sent;\n              houseData = _yield$createHouse.data;\n\n              if (houseData === null || houseData === void 0 ? void 0 : houseData.createHouse) {\n                router.push(\"/houses/\".concat(houseData.createHouse.id));\n              }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCreate(_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(currentHouse, data) {\n      var image, _yield$createSignatur2, signatureData, _signatureData$create2, signature, timestamp, imageData, _yield$updateHouse, houseData;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              image = currentHouse.image;\n\n              if (!data.image[0]) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 4;\n              return createSignature();\n\n            case 4:\n              _yield$createSignatur2 = _context2.sent;\n              signatureData = _yield$createSignatur2.data;\n\n              if (!signatureData) {\n                _context2.next = 12;\n                break;\n              }\n\n              _signatureData$create2 = signatureData.createImageSignature, signature = _signatureData$create2.signature, timestamp = _signatureData$create2.timestamp;\n              _context2.next = 10;\n              return uploadImage(data.image[0], signature, timestamp);\n\n            case 10:\n              imageData = _context2.sent;\n              image = imageData.secure_url;\n\n            case 12:\n              _context2.next = 14;\n              return updateHouse({\n                variables: {\n                  id: currentHouse.id,\n                  input: {\n                    address: data.address,\n                    image: image,\n                    coordinates: {\n                      latitude: data.latitude,\n                      longitude: data.longitude\n                    },\n                    bedrooms: parseInt(data.bedrooms, 10)\n                  }\n                }\n              });\n\n            case 14:\n              _yield$updateHouse = _context2.sent;\n              houseData = _yield$updateHouse.data;\n\n              if (houseData === null || houseData === void 0 ? void 0 : houseData.updateHouse) {\n                router.push(\"/houses/\".concat(currentHouse.id));\n              }\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleUpdate(_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onSubmit = function onSubmit(data) {\n    setSubmitting(false);\n\n    if (!!house) {\n      handleUpdate(house, data);\n    } else {\n      handleCreate(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mx-auto max-w-xl py-4\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl\",\n      children: house ? \"Editing \".concat(house.address) : \"Add a New House\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search\",\n        className: \"block\",\n        children: \"Search for your address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        onSelectAddress: function onSelectAddress(address, latitude, longitude) {\n          setValue(\"address\", address);\n          setValue(\"latitude\", latitude);\n          setValue(\"longitude\", longitude);\n        },\n        defaultValue: house ? house.address : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), errors.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.address.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), address && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: \"p-4 border-dashed border-4 border-gray-600 block cursor-pointer\",\n          children: \"Click to add image (16:9)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          name: \"image\",\n          type: \"file\",\n          accept: \"image/*\",\n          style: {\n            display: \"none\"\n          },\n          ref: register({\n            validate: function validate(fileList) {\n              if (house || fileList.length === 1) return true;\n              return \"Please upload one file\";\n            }\n          }),\n          onChange: function onChange(event) {\n            var _event$target, _event$target$files;\n\n            if (event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$files = _event$target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0]) {\n              var file = event.target.files[0];\n              var reader = new FileReader();\n\n              reader.onloadend = function () {\n                setPreviewImage(reader.result);\n              };\n\n              reader.readAsDataURL(file);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), previewImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewImage,\n          className: \"mt-4 object-cover\",\n          style: {\n            width: \"576px\",\n            height: \"\".concat(9 / 16 * 576, \"px\")\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this) : house ? /*#__PURE__*/_jsxDEV(Image, {\n          className: \"mt-4\",\n          cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\n          publicId: house.publicId,\n          alt: house.address,\n          secure: true,\n          dpr: \"auto\",\n          quality: \"auto\",\n          width: 576,\n          height: Math.floor(9 / 16 * 576),\n          crop: \"fill\",\n          gravity: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this) : null, errors.image && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.image.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bedrooms\",\n          className: \"block\",\n          children: \"Beds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bedrooms\",\n          name: \"bedrooms\",\n          type: \"number\",\n          className: \"p-2\",\n          ref: register({\n            required: \"Please enter the number of bedrooms\",\n            max: {\n              value: 10,\n              message: \"Wooahh, too big of a house\"\n            },\n            min: {\n              value: 1,\n              message: \"Must have at least 1 bedroom\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), errors.bedrooms && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.bedrooms.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 hover:bg-blue-700 font-bold py-2 px-4 rounded\",\n          type: \"submit\",\n          disabled: submitting,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          href: house ? \"/houses/\".concat(house.id) : \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HouseForm, \"61atQFIPtAl3z8117EhBfsw2uOw=\", false, function () {\n  return [useRouter, useForm, useMutation, useMutation, useMutation];\n});\n\n_c = HouseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"HouseForm\");","map":{"version":3,"sources":["C:/Users/Windows/Desktop/housestreetcourse/house-course/src/components/houseForm.tsx"],"names":["useState","useEffect","useForm","useMutation","gql","useRouter","Link","Image","SearchBox","SIGNATURE_MUTATION","CREATE_HOUSE_MUTATION","UPDATE_HOUSE_MUTATION","uploadImage","image","signature","timestamp","url","process","env","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME","formData","FormData","append","toString","NEXT_PUBLIC_CLOUDINARY_KEY","fetch","method","body","response","json","HouseForm","house","router","submitting","setSubmitting","previewImage","setPreviewImage","defaultValues","address","latitude","longitude","bedrooms","register","handleSubmit","setValue","errors","watch","createSignature","createHouse","updateHouse","name","required","min","max","handleCreate","data","signatureData","createImageSignature","imageData","variables","input","secure_url","coordinates","parseInt","houseData","push","id","handleUpdate","currentHouse","onSubmit","message","display","validate","fileList","length","event","target","files","file","reader","FileReader","onloadend","result","readAsDataURL","width","height","publicId","Math","floor","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { Router, useRouter } from \"next/router\";\r\nimport Link from \"next/link\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { SearchBox } from \"./searchBox\";\r\nimport {\r\n  CreateHouseMutation,\r\n  CreateHouseMutationVariables,\r\n} from \"src/generated/CreateHouseMutation\";\r\nimport {\r\n  UpdateHouseMutation,\r\n  UpdateHouseMutationVariables,\r\n} from \"src/generated/UpdateHouseMutation\";\r\nimport { CreateSignatureMutation } from \"src/generated/CreateSignatureMutation\";\r\n\r\nconst SIGNATURE_MUTATION = gql`\r\n  mutation CreateSignatureMutation {\r\n    createImageSignature {\r\n      signature\r\n      timestamp\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_HOUSE_MUTATION = gql`\r\n  mutation CreateHouseMutation($input: HouseInput!) {\r\n    createHouse(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_HOUSE_MUTATION = gql`\r\n  mutation UpdateHouseMutation($id: String!, $input: HouseInput!) {\r\n    updateHouse(id: $id, input: $input) {\r\n      id\r\n      image\r\n      publicId\r\n      latitude\r\n      longitude\r\n      bedrooms\r\n      address\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IUploadImageResponse {\r\n  secure_url: string;\r\n}\r\n\r\nasync function uploadImage(\r\n  image: File,\r\n  signature: string,\r\n  timestamp: number\r\n): Promise<IUploadImageResponse> {\r\n  const url = `https://api.cloudinary.com/v1_1/${process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME}/upload`;\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"file\", image);\r\n  formData.append(\"signature\", signature);\r\n  formData.append(\"timestamp\", timestamp.toString());\r\n  formData.append(\"api_key\", process.env.NEXT_PUBLIC_CLOUDINARY_KEY ?? \"\");\r\n\r\n  const response = await fetch(url, {\r\n    method: \"post\",\r\n    body: formData,\r\n  });\r\n  return response.json();\r\n}\r\n\r\ninterface IFormData {\r\n  address: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  bedrooms: string;\r\n  image: FileList;\r\n}\r\n\r\ninterface IHouse {\r\n  id: string;\r\n  address: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  bedrooms: number;\r\n  image: string;\r\n  publicId: string;\r\n}\r\n\r\ninterface IProps {\r\n  house?: IHouse;\r\n}\r\n\r\nexport default function HouseForm({ house }: IProps) {\r\n  const router = useRouter();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState<string>();\r\n  const { register, handleSubmit, setValue, errors, watch } = useForm<\r\n    IFormData\r\n  >({\r\n    defaultValues: house\r\n      ? {\r\n          address: house.address,\r\n          latitude: house.latitude,\r\n          longitude: house.longitude,\r\n          bedrooms: house.bedrooms.toString(),\r\n        }\r\n      : {},\r\n  });\r\n  const address = watch(\"address\");\r\n  const [createSignature] = useMutation<CreateSignatureMutation>(\r\n    SIGNATURE_MUTATION\r\n  );\r\n  const [createHouse] = useMutation<\r\n    CreateHouseMutation,\r\n    CreateHouseMutationVariables\r\n  >(CREATE_HOUSE_MUTATION);\r\n  const [updateHouse] = useMutation<\r\n    UpdateHouseMutation,\r\n    UpdateHouseMutationVariables\r\n  >(UPDATE_HOUSE_MUTATION);\r\n\r\n  useEffect(() => {\r\n    register({ name: \"address\" }, { required: \"Please enter your address\" });\r\n    register({ name: \"latitude\" }, { required: true, min: -90, max: 90 });\r\n    register({ name: \"longitude\" }, { required: true, min: -180, max: 180 });\r\n  }, [register]);\r\n\r\n  const handleCreate = async (data: IFormData) => {\r\n    const { data: signatureData } = await createSignature();\r\n    if (signatureData) {\r\n      const { signature, timestamp } = signatureData.createImageSignature;\r\n      const imageData = await uploadImage(data.image[0], signature, timestamp);\r\n\r\n      const { data: houseData } = await createHouse({\r\n        variables: {\r\n          input: {\r\n            address: data.address,\r\n            image: imageData.secure_url,\r\n            coordinates: {\r\n              latitude: data.latitude,\r\n              longitude: data.longitude,\r\n            },\r\n            bedrooms: parseInt(data.bedrooms, 10),\r\n          },\r\n        },\r\n      });\r\n\r\n      if (houseData?.createHouse) {\r\n        router.push(`/houses/${houseData.createHouse.id}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (currentHouse: IHouse, data: IFormData) => {\r\n    let image = currentHouse.image;\r\n\r\n    if (data.image[0]) {\r\n      const { data: signatureData } = await createSignature();\r\n      if (signatureData) {\r\n        const { signature, timestamp } = signatureData.createImageSignature;\r\n        const imageData = await uploadImage(\r\n          data.image[0],\r\n          signature,\r\n          timestamp\r\n        );\r\n        image = imageData.secure_url;\r\n      }\r\n    }\r\n\r\n    const { data: houseData } = await updateHouse({\r\n      variables: {\r\n        id: currentHouse.id,\r\n        input: {\r\n          address: data.address,\r\n          image: image,\r\n          coordinates: {\r\n            latitude: data.latitude,\r\n            longitude: data.longitude,\r\n          },\r\n          bedrooms: parseInt(data.bedrooms, 10),\r\n        },\r\n      },\r\n    });\r\n\r\n    if (houseData?.updateHouse) {\r\n      router.push(`/houses/${currentHouse.id}`);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (data: IFormData) => {\r\n    setSubmitting(false);\r\n    if (!!house) {\r\n      handleUpdate(house, data);\r\n    } else {\r\n      handleCreate(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"mx-auto max-w-xl py-4\" onSubmit={handleSubmit(onSubmit)}>\r\n      <h1 className=\"text-xl\">\r\n        {house ? `Editing ${house.address}` : \"Add a New House\"}\r\n      </h1>\r\n\r\n      <div className=\"mt-4\">\r\n        <label htmlFor=\"search\" className=\"block\">\r\n          Search for your address\r\n        </label>\r\n        <SearchBox\r\n          onSelectAddress={(address, latitude, longitude) => {\r\n            setValue(\"address\", address);\r\n            setValue(\"latitude\", latitude);\r\n            setValue(\"longitude\", longitude);\r\n          }}\r\n          defaultValue={house ? house.address : \"\"}\r\n        />\r\n        {errors.address && <p>{errors.address.message}</p>}\r\n      </div>\r\n\r\n      {address && (\r\n        <>\r\n          <div className=\"mt-4\">\r\n            <label\r\n              htmlFor=\"image\"\r\n              className=\"p-4 border-dashed border-4 border-gray-600 block cursor-pointer\"\r\n            >\r\n              Click to add image (16:9)\r\n            </label>\r\n            <input\r\n              id=\"image\"\r\n              name=\"image\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              ref={register({\r\n                validate: (fileList: FileList) => {\r\n                  if (house || fileList.length === 1) return true;\r\n                  return \"Please upload one file\";\r\n                },\r\n              })}\r\n              onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                if (event?.target?.files?.[0]) {\r\n                  const file = event.target.files[0];\r\n                  const reader = new FileReader();\r\n                  reader.onloadend = () => {\r\n                    setPreviewImage(reader.result as string);\r\n                  };\r\n                  reader.readAsDataURL(file);\r\n                }\r\n              }}\r\n            />\r\n            {previewImage ? (\r\n              <img\r\n                src={previewImage}\r\n                className=\"mt-4 object-cover\"\r\n                style={{ width: \"576px\", height: `${(9 / 16) * 576}px` }}\r\n              />\r\n            ) : house ? (\r\n              <Image\r\n                className=\"mt-4\"\r\n                cloudName={process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME}\r\n                publicId={house.publicId}\r\n                alt={house.address}\r\n                secure\r\n                dpr=\"auto\"\r\n                quality=\"auto\"\r\n                width={576}\r\n                height={Math.floor((9 / 16) * 576)}\r\n                crop=\"fill\"\r\n                gravity=\"auto\"\r\n              />\r\n            ) : null}\r\n            {errors.image && <p>{errors.image.message}</p>}\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <label htmlFor=\"bedrooms\" className=\"block\">\r\n              Beds\r\n            </label>\r\n            <input\r\n              id=\"bedrooms\"\r\n              name=\"bedrooms\"\r\n              type=\"number\"\r\n              className=\"p-2\"\r\n              ref={register({\r\n                required: \"Please enter the number of bedrooms\",\r\n                max: { value: 10, message: \"Wooahh, too big of a house\" },\r\n                min: { value: 1, message: \"Must have at least 1 bedroom\" },\r\n              })}\r\n            />\r\n            {errors.bedrooms && <p>{errors.bedrooms.message}</p>}\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <button\r\n              className=\"bg-blue-500 hover:bg-blue-700 font-bold py-2 px-4 rounded\"\r\n              type=\"submit\"\r\n              disabled={submitting}\r\n            >\r\n              Save\r\n            </button>{\" \"}\r\n            <Link href={house ? `/houses/${house.id}` : \"/\"}>\r\n              <a>Cancel</a>\r\n            </Link>\r\n          </div>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}