{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Windows\\\\Desktop\\\\housestreetcourse\\\\house-course\\\\src\\\\components\\\\houseForm.tsx\";\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { Image } from \"cloudinary-react\";\nimport { SearchBox } from \"./searchBox\";\nconst SIGNATURE_MUTATION = gql`\n  mutation CreateSignatureMutation {\n    createImageSignature {\n      signature\n      timestamp\n    }\n  }\n`;\nconst CREATE_HOUSE_MUTATION = gql`\n  mutation CreateHouseMutation($input: HouseInput!) {\n    createHouse(input: $input) {\n      id\n    }\n  }\n`;\nconst UPDATE_HOUSE_MUTATION = gql`\n  mutation UpdateHouseMutation($id: String!, $input: HouseInput!) {\n    updateHouse(id: $id, input: $input) {\n      id\n      image\n      publicId\n      latitude\n      longitude\n      bedrooms\n      address\n    }\n  }\n`;\n\nasync function uploadImage(image, signature, timestamp) {\n  var _process$env$NEXT_PUB;\n\n  const url = `https://api.cloudinary.com/v1_1/${process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME}/upload`;\n  const formData = new FormData();\n  formData.append(\"file\", image);\n  formData.append(\"signature\", signature);\n  formData.append(\"timestamp\", timestamp.toString());\n  formData.append(\"api_key\", (_process$env$NEXT_PUB = process.env.NEXT_PUBLIC_CLOUDINARY_KEY) !== null && _process$env$NEXT_PUB !== void 0 ? _process$env$NEXT_PUB : \"\");\n  const response = await fetch(url, {\n    method: \"post\",\n    body: formData\n  });\n  return response.json();\n}\n\nexport default function HouseForm({\n  house\n}) {\n  const router = useRouter();\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false);\n  const {\n    0: previewImage,\n    1: setPreviewImage\n  } = useState();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    errors,\n    watch\n  } = useForm({\n    defaultValues: house ? {\n      address: house.address,\n      latitude: house.latitude,\n      longitude: house.longitude,\n      bedrooms: house.bedrooms.toString()\n    } : {}\n  });\n  const address = watch(\"address\");\n  const [createSignature] = useMutation(SIGNATURE_MUTATION);\n  const [createHouse] = useMutation(CREATE_HOUSE_MUTATION);\n  const [updateHouse] = useMutation(UPDATE_HOUSE_MUTATION);\n  useEffect(() => {\n    register({\n      name: \"address\"\n    }, {\n      required: \"Please enter your address\"\n    });\n    register({\n      name: \"latitude\"\n    }, {\n      required: true,\n      min: -90,\n      max: 90\n    });\n    register({\n      name: \"longitude\"\n    }, {\n      required: true,\n      min: -180,\n      max: 180\n    });\n  }, [register]);\n\n  const handleCreate = async data => {\n    const {\n      data: signatureData\n    } = await createSignature();\n\n    if (signatureData) {\n      const {\n        signature,\n        timestamp\n      } = signatureData.createImageSignature;\n      const imageData = await uploadImage(data.image[0], signature, timestamp);\n      const {\n        data: houseData\n      } = await createHouse({\n        variables: {\n          input: {\n            address: data.address,\n            image: imageData.secure_url,\n            coordinates: {\n              latitude: data.latitude,\n              longitude: data.longitude\n            },\n            bedrooms: parseInt(data.bedrooms, 10)\n          }\n        }\n      });\n\n      if (houseData === null || houseData === void 0 ? void 0 : houseData.createHouse) {\n        router.push(`/houses/${houseData.createHouse.id}`);\n      }\n    }\n  };\n\n  const handleUpdate = async (currentHouse, data) => {\n    let image = currentHouse.image;\n\n    if (data.image[0]) {\n      const {\n        data: signatureData\n      } = await createSignature();\n\n      if (signatureData) {\n        const {\n          signature,\n          timestamp\n        } = signatureData.createImageSignature;\n        const imageData = await uploadImage(data.image[0], signature, timestamp);\n        image = imageData.secure_url;\n      }\n    }\n\n    const {\n      data: houseData\n    } = await updateHouse({\n      variables: {\n        id: currentHouse.id,\n        input: {\n          address: data.address,\n          image: image,\n          coordinates: {\n            latitude: data.latitude,\n            longitude: data.longitude\n          },\n          bedrooms: parseInt(data.bedrooms, 10)\n        }\n      }\n    });\n\n    if (houseData === null || houseData === void 0 ? void 0 : houseData.updateHouse) {\n      router.push(`/houses/${currentHouse.id}`);\n    }\n  };\n\n  const onSubmit = data => {\n    setSubmitting(false);\n\n    if (!!house) {\n      handleUpdate(house, data);\n    } else {\n      handleCreate(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mx-auto max-w-xl py-4\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl\",\n      children: house ? `Editing ${house.address}` : \"Add a New House\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search\",\n        className: \"block\",\n        children: \"Search for your address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        onSelectAddress: (address, latitude, longitude) => {\n          setValue(\"address\", address);\n          setValue(\"latitude\", latitude);\n          setValue(\"longitude\", longitude);\n        },\n        defaultValue: house ? house.address : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), errors.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.address.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), address && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: \"p-4 border-dashed border-4 border-gray-600 block cursor-pointer\",\n          children: \"Click to add image (16:9)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          name: \"image\",\n          type: \"file\",\n          accept: \"image/*\",\n          style: {\n            display: \"none\"\n          },\n          ref: register({\n            validate: fileList => {\n              if (house || fileList.length === 1) return true;\n              return \"Please upload one file\";\n            }\n          }),\n          onChange: event => {\n            var _event$target, _event$target$files;\n\n            if (event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$files = _event$target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0]) {\n              const file = event.target.files[0];\n              const reader = new FileReader();\n\n              reader.onloadend = () => {\n                setPreviewImage(reader.result);\n              };\n\n              reader.readAsDataURL(file);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), previewImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewImage,\n          className: \"mt-4 object-cover\",\n          style: {\n            width: \"576px\",\n            height: `${9 / 16 * 576}px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this) : house ? /*#__PURE__*/_jsxDEV(Image, {\n          className: \"mt-4\",\n          cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\n          publicId: house.publicId,\n          alt: house.address,\n          secure: true,\n          dpr: \"auto\",\n          quality: \"auto\",\n          width: 576,\n          height: Math.floor(9 / 16 * 576),\n          crop: \"fill\",\n          gravity: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this) : null, errors.image && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.image.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bedrooms\",\n          className: \"block\",\n          children: \"Beds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"bedrooms\",\n          name: \"bedrooms\",\n          type: \"number\",\n          className: \"p-2\",\n          ref: register({\n            required: \"Please enter the number of bedrooms\",\n            max: {\n              value: 10,\n              message: \"Wooahh, too big of a house\"\n            },\n            min: {\n              value: 1,\n              message: \"Must have at least 1 bedroom\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), errors.bedrooms && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.bedrooms.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 hover:bg-blue-700 font-bold py-2 px-4 rounded\",\n          type: \"submit\",\n          disabled: submitting,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          href: house ? `/houses/${house.id}` : \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Windows/Desktop/housestreetcourse/house-course/src/components/houseForm.tsx"],"names":["useState","useEffect","useForm","useMutation","gql","useRouter","Link","Image","SearchBox","SIGNATURE_MUTATION","CREATE_HOUSE_MUTATION","UPDATE_HOUSE_MUTATION","uploadImage","image","signature","timestamp","url","process","env","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME","formData","FormData","append","toString","NEXT_PUBLIC_CLOUDINARY_KEY","response","fetch","method","body","json","HouseForm","house","router","submitting","setSubmitting","previewImage","setPreviewImage","register","handleSubmit","setValue","errors","watch","defaultValues","address","latitude","longitude","bedrooms","createSignature","createHouse","updateHouse","name","required","min","max","handleCreate","data","signatureData","createImageSignature","imageData","houseData","variables","input","secure_url","coordinates","parseInt","push","id","handleUpdate","currentHouse","onSubmit","message","display","validate","fileList","length","event","target","files","file","reader","FileReader","onloadend","result","readAsDataURL","width","height","publicId","Math","floor","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { Router, useRouter } from \"next/router\";\r\nimport Link from \"next/link\";\r\nimport { Image } from \"cloudinary-react\";\r\nimport { SearchBox } from \"./searchBox\";\r\nimport {\r\n  CreateHouseMutation,\r\n  CreateHouseMutationVariables,\r\n} from \"src/generated/CreateHouseMutation\";\r\nimport {\r\n  UpdateHouseMutation,\r\n  UpdateHouseMutationVariables,\r\n} from \"src/generated/UpdateHouseMutation\";\r\nimport { CreateSignatureMutation } from \"src/generated/CreateSignatureMutation\";\r\n\r\nconst SIGNATURE_MUTATION = gql`\r\n  mutation CreateSignatureMutation {\r\n    createImageSignature {\r\n      signature\r\n      timestamp\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_HOUSE_MUTATION = gql`\r\n  mutation CreateHouseMutation($input: HouseInput!) {\r\n    createHouse(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_HOUSE_MUTATION = gql`\r\n  mutation UpdateHouseMutation($id: String!, $input: HouseInput!) {\r\n    updateHouse(id: $id, input: $input) {\r\n      id\r\n      image\r\n      publicId\r\n      latitude\r\n      longitude\r\n      bedrooms\r\n      address\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IUploadImageResponse {\r\n  secure_url: string;\r\n}\r\n\r\nasync function uploadImage(\r\n  image: File,\r\n  signature: string,\r\n  timestamp: number\r\n): Promise<IUploadImageResponse> {\r\n  const url = `https://api.cloudinary.com/v1_1/${process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME}/upload`;\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"file\", image);\r\n  formData.append(\"signature\", signature);\r\n  formData.append(\"timestamp\", timestamp.toString());\r\n  formData.append(\"api_key\", process.env.NEXT_PUBLIC_CLOUDINARY_KEY ?? \"\");\r\n\r\n  const response = await fetch(url, {\r\n    method: \"post\",\r\n    body: formData,\r\n  });\r\n  return response.json();\r\n}\r\n\r\ninterface IFormData {\r\n  address: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  bedrooms: string;\r\n  image: FileList;\r\n}\r\n\r\ninterface IHouse {\r\n  id: string;\r\n  address: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  bedrooms: number;\r\n  image: string;\r\n  publicId: string;\r\n}\r\n\r\ninterface IProps {\r\n  house?: IHouse;\r\n}\r\n\r\nexport default function HouseForm({ house }: IProps) {\r\n  const router = useRouter();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState<string>();\r\n  const { register, handleSubmit, setValue, errors, watch } = useForm<\r\n    IFormData\r\n  >({\r\n    defaultValues: house\r\n      ? {\r\n          address: house.address,\r\n          latitude: house.latitude,\r\n          longitude: house.longitude,\r\n          bedrooms: house.bedrooms.toString(),\r\n        }\r\n      : {},\r\n  });\r\n  const address = watch(\"address\");\r\n  const [createSignature] = useMutation<CreateSignatureMutation>(\r\n    SIGNATURE_MUTATION\r\n  );\r\n  const [createHouse] = useMutation<\r\n    CreateHouseMutation,\r\n    CreateHouseMutationVariables\r\n  >(CREATE_HOUSE_MUTATION);\r\n  const [updateHouse] = useMutation<\r\n    UpdateHouseMutation,\r\n    UpdateHouseMutationVariables\r\n  >(UPDATE_HOUSE_MUTATION);\r\n\r\n  useEffect(() => {\r\n    register({ name: \"address\" }, { required: \"Please enter your address\" });\r\n    register({ name: \"latitude\" }, { required: true, min: -90, max: 90 });\r\n    register({ name: \"longitude\" }, { required: true, min: -180, max: 180 });\r\n  }, [register]);\r\n\r\n  const handleCreate = async (data: IFormData) => {\r\n    const { data: signatureData } = await createSignature();\r\n    if (signatureData) {\r\n      const { signature, timestamp } = signatureData.createImageSignature;\r\n      const imageData = await uploadImage(data.image[0], signature, timestamp);\r\n\r\n      const { data: houseData } = await createHouse({\r\n        variables: {\r\n          input: {\r\n            address: data.address,\r\n            image: imageData.secure_url,\r\n            coordinates: {\r\n              latitude: data.latitude,\r\n              longitude: data.longitude,\r\n            },\r\n            bedrooms: parseInt(data.bedrooms, 10),\r\n          },\r\n        },\r\n      });\r\n\r\n      if (houseData?.createHouse) {\r\n        router.push(`/houses/${houseData.createHouse.id}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (currentHouse: IHouse, data: IFormData) => {\r\n    let image = currentHouse.image;\r\n\r\n    if (data.image[0]) {\r\n      const { data: signatureData } = await createSignature();\r\n      if (signatureData) {\r\n        const { signature, timestamp } = signatureData.createImageSignature;\r\n        const imageData = await uploadImage(\r\n          data.image[0],\r\n          signature,\r\n          timestamp\r\n        );\r\n        image = imageData.secure_url;\r\n      }\r\n    }\r\n\r\n    const { data: houseData } = await updateHouse({\r\n      variables: {\r\n        id: currentHouse.id,\r\n        input: {\r\n          address: data.address,\r\n          image: image,\r\n          coordinates: {\r\n            latitude: data.latitude,\r\n            longitude: data.longitude,\r\n          },\r\n          bedrooms: parseInt(data.bedrooms, 10),\r\n        },\r\n      },\r\n    });\r\n\r\n    if (houseData?.updateHouse) {\r\n      router.push(`/houses/${currentHouse.id}`);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (data: IFormData) => {\r\n    setSubmitting(false);\r\n    if (!!house) {\r\n      handleUpdate(house, data);\r\n    } else {\r\n      handleCreate(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"mx-auto max-w-xl py-4\" onSubmit={handleSubmit(onSubmit)}>\r\n      <h1 className=\"text-xl\">\r\n        {house ? `Editing ${house.address}` : \"Add a New House\"}\r\n      </h1>\r\n\r\n      <div className=\"mt-4\">\r\n        <label htmlFor=\"search\" className=\"block\">\r\n          Search for your address\r\n        </label>\r\n        <SearchBox\r\n          onSelectAddress={(address, latitude, longitude) => {\r\n            setValue(\"address\", address);\r\n            setValue(\"latitude\", latitude);\r\n            setValue(\"longitude\", longitude);\r\n          }}\r\n          defaultValue={house ? house.address : \"\"}\r\n        />\r\n        {errors.address && <p>{errors.address.message}</p>}\r\n      </div>\r\n\r\n      {address && (\r\n        <>\r\n          <div className=\"mt-4\">\r\n            <label\r\n              htmlFor=\"image\"\r\n              className=\"p-4 border-dashed border-4 border-gray-600 block cursor-pointer\"\r\n            >\r\n              Click to add image (16:9)\r\n            </label>\r\n            <input\r\n              id=\"image\"\r\n              name=\"image\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              ref={register({\r\n                validate: (fileList: FileList) => {\r\n                  if (house || fileList.length === 1) return true;\r\n                  return \"Please upload one file\";\r\n                },\r\n              })}\r\n              onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n                if (event?.target?.files?.[0]) {\r\n                  const file = event.target.files[0];\r\n                  const reader = new FileReader();\r\n                  reader.onloadend = () => {\r\n                    setPreviewImage(reader.result as string);\r\n                  };\r\n                  reader.readAsDataURL(file);\r\n                }\r\n              }}\r\n            />\r\n            {previewImage ? (\r\n              <img\r\n                src={previewImage}\r\n                className=\"mt-4 object-cover\"\r\n                style={{ width: \"576px\", height: `${(9 / 16) * 576}px` }}\r\n              />\r\n            ) : house ? (\r\n              <Image\r\n                className=\"mt-4\"\r\n                cloudName={process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME}\r\n                publicId={house.publicId}\r\n                alt={house.address}\r\n                secure\r\n                dpr=\"auto\"\r\n                quality=\"auto\"\r\n                width={576}\r\n                height={Math.floor((9 / 16) * 576)}\r\n                crop=\"fill\"\r\n                gravity=\"auto\"\r\n              />\r\n            ) : null}\r\n            {errors.image && <p>{errors.image.message}</p>}\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <label htmlFor=\"bedrooms\" className=\"block\">\r\n              Beds\r\n            </label>\r\n            <input\r\n              id=\"bedrooms\"\r\n              name=\"bedrooms\"\r\n              type=\"number\"\r\n              className=\"p-2\"\r\n              ref={register({\r\n                required: \"Please enter the number of bedrooms\",\r\n                max: { value: 10, message: \"Wooahh, too big of a house\" },\r\n                min: { value: 1, message: \"Must have at least 1 bedroom\" },\r\n              })}\r\n            />\r\n            {errors.bedrooms && <p>{errors.bedrooms.message}</p>}\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <button\r\n              className=\"bg-blue-500 hover:bg-blue-700 font-bold py-2 px-4 rounded\"\r\n              type=\"submit\"\r\n              disabled={submitting}\r\n            >\r\n              Save\r\n            </button>{\" \"}\r\n            <Link href={house ? `/houses/${house.id}` : \"/\"}>\r\n              <a>Cancel</a>\r\n            </Link>\r\n          </div>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}