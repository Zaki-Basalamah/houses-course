{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Windows\\\\Desktop\\\\housestreetcourse\\\\house-course\\\\src\\\\auth\\\\useAuth.tsx\";\nimport { useEffect, useState, useContext, createContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport initFirebase from \"./initFirebase\";\nimport { removeTokenCookie, setTokenCookie } from \"./tokenCookies\";\ninitFirebase();\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  logout: () => null,\n  authenticated: false\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const router = useRouter();\n\n  const logout = () => {\n    firebase.auth().signOut().then(() => {\n      router.push(\"/\");\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n\n  useEffect(() => {\n    const cancelAuthListener = firebase.auth().onIdTokenChanged(async user => {\n      if (user) {\n        const token = await user.getIdToken();\n        setTokenCookie(token);\n        setUser(user);\n      } else {\n        removeTokenCookie();\n        setUser(null);\n      }\n    });\n    return () => {\n      cancelAuthListener();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      logout,\n      authenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\nexport function useAuth() {\n  return useContext(AuthContext);\n}","map":{"version":3,"sources":["C:/Users/Windows/Desktop/housestreetcourse/house-course/src/auth/useAuth.tsx"],"names":["useEffect","useState","useContext","createContext","useRouter","firebase","initFirebase","removeTokenCookie","setTokenCookie","AuthContext","user","logout","authenticated","AuthProvider","children","setUser","router","auth","signOut","then","push","catch","e","console","error","cancelAuthListener","onIdTokenChanged","token","getIdToken","useAuth"],"mappings":";;AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,aAJF,QAMO,OANP;AAOA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,gBAAlD;AAEAF,YAAY;AAQZ,MAAMG,WAAW,gBAAGN,aAAa,CAAe;AAC9CO,EAAAA,IAAI,EAAE,IADwC;AAE9CC,EAAAA,MAAM,EAAE,MAAM,IAFgC;AAG9CC,EAAAA,aAAa,EAAE;AAH+B,CAAf,CAAjC;AAMA,OAAO,MAAMC,YAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/D,QAAM;AAAA,OAACJ,IAAD;AAAA,OAAOK;AAAP,MAAkBd,QAAQ,CAAuB,IAAvB,CAAhC;AACA,QAAMe,MAAM,GAAGZ,SAAS,EAAxB;;AAEA,QAAMO,MAAM,GAAG,MAAM;AACnBN,IAAAA,QAAQ,CACLY,IADH,GAEGC,OAFH,GAGGC,IAHH,CAGQ,MAAM;AACVH,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACD,KALH,EAMGC,KANH,CAMUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD,KARH;AASD,GAVD;;AAYAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,kBAAkB,GAAGpB,QAAQ,CAChCY,IADwB,GAExBS,gBAFwB,CAEP,MAAOhB,IAAP,IAAgB;AAChC,UAAIA,IAAJ,EAAU;AACR,cAAMiB,KAAK,GAAG,MAAMjB,IAAI,CAACkB,UAAL,EAApB;AACApB,QAAAA,cAAc,CAACmB,KAAD,CAAd;AACAZ,QAAAA,OAAO,CAACL,IAAD,CAAP;AACD,OAJD,MAIO;AACLH,QAAAA,iBAAiB;AACjBQ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KAXwB,CAA3B;AAaA,WAAO,MAAM;AACXU,MAAAA,kBAAkB;AACnB,KAFD;AAGD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEf,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,aAAa,EAAE,CAAC,CAACF;AAAjC,KAA7B;AAAA,cACGI;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCM;AA0CP,OAAO,SAASe,OAAT,GAAmB;AACxB,SAAO3B,UAAU,CAACO,WAAD,CAAjB;AACD","sourcesContent":["import {\r\n  useEffect,\r\n  useState,\r\n  useContext,\r\n  createContext,\r\n  FunctionComponent,\r\n} from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport initFirebase from \"./initFirebase\";\r\nimport { removeTokenCookie, setTokenCookie } from \"./tokenCookies\";\r\n\r\ninitFirebase();\r\n\r\ninterface IAuthContext {\r\n  user: firebase.User | null;\r\n  logout: () => void;\r\n  authenticated: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<IAuthContext>({\r\n  user: null,\r\n  logout: () => null,\r\n  authenticated: false,\r\n});\r\n\r\nexport const AuthProvider: FunctionComponent = ({ children }) => {\r\n  const [user, setUser] = useState<firebase.User | null>(null);\r\n  const router = useRouter();\r\n\r\n  const logout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        router.push(\"/\");\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const cancelAuthListener = firebase\r\n      .auth()\r\n      .onIdTokenChanged(async (user) => {\r\n        if (user) {\r\n          const token = await user.getIdToken();\r\n          setTokenCookie(token);\r\n          setUser(user);\r\n        } else {\r\n          removeTokenCookie();\r\n          setUser(null);\r\n        }\r\n      });\r\n\r\n    return () => {\r\n      cancelAuthListener();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, logout, authenticated: !!user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}