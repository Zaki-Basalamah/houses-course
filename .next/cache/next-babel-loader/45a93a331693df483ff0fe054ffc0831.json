{"ast":null,"code":"var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _temp, _dec6, _dec7, _dec8, _dec9, _dec10, _class4, _class5;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { ObjectType, Field, Int, Resolver, Mutation, Authorized } from \"type-graphql\";\n\nconst cloudinary = require(\"cloudinary\").v2;\n\nlet ImageSignature = (_dec = ObjectType(), _dec2 = Field(_type => String), _dec3 = Reflect.metadata(\"design:type\", String), _dec4 = Field(_type => Int), _dec5 = Reflect.metadata(\"design:type\", Number), _dec(_class = (_class2 = (_temp = class ImageSignature {\n  constructor() {\n    _initializerDefineProperty(this, \"signature\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"timestamp\", _descriptor2, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"signature\", [_dec2, _dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"timestamp\", [_dec4, _dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport let ImageResolver = (_dec6 = Resolver(), _dec7 = Authorized(), _dec8 = Mutation(_returns => ImageSignature), _dec9 = Reflect.metadata(\"design:type\", Function), _dec10 = Reflect.metadata(\"design:paramtypes\", []), _dec6(_class4 = (_class5 = class ImageResolver {\n  createImageSignature() {\n    const timestamp = Math.round(new Date().getTime() / 1000);\n    const signature = cloudinary.utils.api_sign_request({\n      timestamp\n    }, process.env.CLOUDINARY_SECRET);\n    return {\n      timestamp,\n      signature\n    };\n  }\n\n}, (_applyDecoratedDescriptor(_class5.prototype, \"createImageSignature\", [_dec7, _dec8, _dec9, _dec10], Object.getOwnPropertyDescriptor(_class5.prototype, \"createImageSignature\"), _class5.prototype)), _class5)) || _class4);","map":{"version":3,"sources":["C:/Users/Windows/Desktop/housestreetcourse/house-course/src/schema/image.ts"],"names":["ObjectType","Field","Int","Resolver","Mutation","Authorized","cloudinary","require","v2","ImageSignature","_type","String","ImageResolver","_returns","createImageSignature","timestamp","Math","round","Date","getTime","signature","utils","api_sign_request","process","env","CLOUDINARY_SECRET"],"mappings":";;;;;;;;AAAA,SACEA,UADF,EAEEC,KAFF,EAGEC,GAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,UANF,QAOO,cAPP;;AAQA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,EAAzC;;IAGMC,c,WADLT,UAAU,E,UAERC,KAAK,CAAES,KAAD,IAAWC,MAAZ,C,2DAGLV,KAAK,CAAES,KAAD,IAAWR,GAAZ,C,qFALR,MACMO,cADN,CACqB;AAAA;AAAA;;AAAA;AAAA;;AAAA,C;;;;;;;;;;;AASrB,WAAaG,aAAb,YADCT,QAAQ,EACT,UACGE,UAAU,EADb,UAEGD,QAAQ,CAAES,QAAD,IAAcJ,cAAf,CAFX,oIADA,MACaG,aADb,CAC2B;AAGzBE,EAAAA,oBAFA,GAEuC;AACrC,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CAAlB;AACA,UAAMC,SAAiB,GAAGd,UAAU,CAACe,KAAX,CAAiBC,gBAAjB,CACxB;AACEP,MAAAA;AADF,KADwB,EAIxBQ,OAAO,CAACC,GAAR,CAAYC,iBAJY,CAA1B;AAMA,WAAO;AAAEV,MAAAA,SAAF;AAAaK,MAAAA;AAAb,KAAP;AACD;;AAZwB,CAA3B","sourcesContent":["import {\r\n  ObjectType,\r\n  Field,\r\n  Int,\r\n  Resolver,\r\n  Mutation,\r\n  Authorized,\r\n} from \"type-graphql\";\r\nconst cloudinary = require(\"cloudinary\").v2;\r\n\r\n@ObjectType()\r\nclass ImageSignature {\r\n  @Field((_type) => String)\r\n  signature!: string;\r\n\r\n  @Field((_type) => Int)\r\n  timestamp!: number;\r\n}\r\n\r\n@Resolver()\r\nexport class ImageResolver {\r\n  @Authorized()\r\n  @Mutation((_returns) => ImageSignature)\r\n  createImageSignature(): ImageSignature {\r\n    const timestamp = Math.round(new Date().getTime() / 1000);\r\n    const signature: string = cloudinary.utils.api_sign_request(\r\n      {\r\n        timestamp,\r\n      },\r\n      process.env.CLOUDINARY_SECRET\r\n    );\r\n    return { timestamp, signature };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}